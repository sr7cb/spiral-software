#Sparse operator Sparse Input
Load(graph);
Import(graph);
opts := SparseDefaults;
opts.globalUnrolling := 0;
ts := TSparse(TArray(TInt, 5), TSemiring_Arithmetic(TInt));
fdos := FDataSparseOfs(ts, 5, 0);
rv := RowVec(fdos);
rv.ruletree := rec();
cs := CodeSums(rv, opts);
PrintCode("scalarproduct", cs, opts);

#Sparse operator Dense Input
Load(graph);
Import(graph);
opts := SpiralDefaults;
opts.globalUnrolling := 0;
ts := TSparse(TArray(TInt, 5), TSemiring_Arithmetic(TInt));
fdos := FDataSparseOfs(ts, 5, 0);
rv := RowVec(fdos);
rv.ruletree := rec();
cs := CodeSums(rv, opts);
PrintCode("scalarproduct", cs, opts);


#Dense operator Sparse Input
Load(graph);
Import(graph);
opts := SparseDefaults;
opts.globalUnrolling := 0;
test := var.fresh_t("test", TPtr(TInt));
fds := FDataOfs(test, 5, 0);
rv := RowVec(fds);
rv.ruletree := rec();
cs := CodeSums(rv, opts);
PrintCode("scalarproduct", cs, opts);